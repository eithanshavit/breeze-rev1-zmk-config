/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ---  MAIN  -----------------------------------------------------------------------------------------------------------------------
            // |    ESC    |     1     |     2     |     3      |      4      |      5     |                           |      6      |      7     |      8      |      9     |     0    |    BSPC    | |    -/_        |     =/+        |    GRAVE    |
            // |    TAB    |     Q     |     W     |     E      |      R      |      T     |                           |      Y      |      U     |      I      |      O     |     P    |    DEL     | |     [         |      ]         |      \      |
            // |   LCTRL   |     A     |     S     |     D      |      F      |      G     |                           |      H      |      J     |      K      |      L     |     ;    |     '      | |               |      UP        |             |
            // |   SHIFT   |     Z     |     X     |     C      |      V      |      B     |                           |      N      |      M     |      ,      |      .     |     /    |   RSHIFT   | |     L         |      DN        |      R      |
            //                                     |   NUMPAD   |     LALT    |    LCMD    |   SPACE    |  |   ENTER   |   FUNCTION  |  MACOS APP |  MACOS LANG |

            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3     &kp N4   &kp N5  &kp N6         &kp N7         &kp N8     &kp N9   &kp N0    &kp BSPC    &kp MINUS         &kp EQUAL      &kp GRAVE
&kp TAB    &kp Q     &kp W     &kp E      &kp R    &kp T   &kp Y          &kp U          &kp I      &kp O    &kp P     &kp DEL     &kp LBKT          &kp RBKT       &kp BSLH
&kp LCTRL  &kp A     &kp S     &kp D      &kp F    &kp G   &kp H          &kp J          &kp K      &kp L    &kp SEMI  &kp APOS    &kp LC(LA(RET))
&kp LSHFT  &kp Z     &kp X     &kp C      &kp V    &kp B   &kp N          &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT  &kp LC(LA(LEFT))  &kp LG(GRAVE)  &kp LC(LA(RIGHT))
&mo 2      &kp LALT  &kp LCMD  &kp SPACE  &kp RET  &mo 1   &kp LG(GRAVE)  &kp LA(SPACE)
            >;
        };

        function_layer {
            // ---  FUNCTION  -------------------------------------------------------------------------------------------------------------------
            // |           |           |           |            |             |            |                           |             |            |             |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             | CMD SPACE  |     UP      | CTRL SPACE |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    LEFT    |    DOWN     |   RIGHT    |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    MUTE    |  VOL DOWN   |   VOL UP   |          |            | |           |             |             |
            //                                     |            |             |            |            |  |           |             |            |             |

            bindings = <
&none  &kp LG(SPACE)  &kp LC(SPACE)  &none              &none  &none  &none  &none          &none         &none          &none  &none  &none  &none  &none
&none  &none          &none          &kp K_SCROLL_UP    &none  &none  &none  &kp LG(SPACE)  &kp UP        &kp LC(SPACE)  &none  &none  &none  &none  &none
&none  &none          &none          &kp K_SCROLL_DOWN  &none  &none  &none  &kp LEFT       &kp DOWN      &kp RIGHT      &none  &none  &none
&none  &none          &none          &none              &none  &none  &none  &kp C_MUTE     &kp C_VOL_DN  &kp C_VOL_UP   &none  &none  &none  &none  &none
&none  &none          &none          &none              &none  &none  &none  &none
            >;
        };

        numpad_layer {
            // ---  NUMPAD  -------------------------------------------------------------------------------------------------------------------                                                             ------          MAGENT SCREEN MACROS    -------
            // |           |           |           |            |             |            |                           |       =       |      /       |      *       |      -     |          |            | |   1/3 LEFT     |   1/3 CENT    |  1/3 RIGHT  |
            // |           |           |           |            |             |            |                           |       7       |      8       |      9       |      +     |          |            | |   2/3 LEFT     |               |  2/3 RIGHT  |
            // |           |           |           |            |             |            |                           |       4       |      5       |      6       |            |          |            | |                |     FULL      |             |
            // |           |           |           |            |             |            |                           |       1       |      2       |      3       |            |          |            | |   1/2 LEFT     |     FULL      |  1/2 RIGHT  |
            //                                     |            |             |            |            |  |           |       0       |      .       |              |

            bindings = <
&bt BT_CLR_ALL  &bt BT_PRV  &bt BT_NXT  &none  &none  &none            &kp EQUAL        &kp SLASH        &kp STAR         &kp MINUS  &none  &trans  &kp LC(LA(D))     &kp LC(LA(F))  &kp LC(LA(G))
&none           &none       &none       &none  &none  &none            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS   &none  &trans  &kp LC(LA(E))     &none          &kp LC(LA(T))
&none           &none       &none       &none  &none  &none            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none      &none  &none   &kp LC(LA(RET))
&none           &none       &none       &none  &none  &none            &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none      &none  &none   &kp LC(LA(LEFT))  &kp LG(GRAVE)  &kp LC(LA(RIGHT))
&none           &none       &none       &none  &none  &kp KP_NUMBER_0  &kp KP_DOT       &none
            >;
        };
    };
};
